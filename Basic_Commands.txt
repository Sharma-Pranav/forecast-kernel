# üì¶ Forecast-Kernel Bootstrap ‚Äî Full Phase 1‚Äì4 Execution

# 1Ô∏è‚É£ Activate or Create Virtual Environment
if (-not (Test-Path ".venv")) {
    Write-Host "Creating .venv with Python 3.10..."
    uv venv --python=3.10 .venv
}
. .venv\Scripts\Activate.ps1

# 2Ô∏è‚É£ Editable Package Install
Write-Host "Installing dependencies from requirements.txt..."
uv pip install -r requirements.txt

Write-Host "Installing forecastkernel in editable mode..."
pip install -e .

# 3Ô∏è‚É£ Git Identity (one-time setup)
git config --global user.name "Pranav Sharma"
git config --global user.email "pranavsharma619@gmail.com"

# 4Ô∏è‚É£ Run Baseline Phase 1 Script
python -m forecastkernel.scripts.baseline_sf `
  --data data/raw/univariate_example.csv `
  --horizon 14 `
  --tag demo `
  --phase 1

# 5Ô∏è‚É£ Run CI Runtime Tests
python -m forecastkernel.tests.test_ci_runtime `
  --run_dir data/outputs/baseline/demo `
  --data data/raw/univariate_example.csv

# 6Ô∏è‚É£ Run Audit Hash Check
python -m forecastkernel.utils.ci_utils `
  --audit_log data/outputs/baseline/demo/audit_log.json `
  --output_dir data/outputs/baseline/demo

# 7Ô∏è‚É£ Generate Visual Delta Audit
python -m forecastkernel.scripts.visual_delta_audit `
  --output_path data/outputs/baseline/demo

# üîÅ Optional: Regeneration + Delta Recheck
python -m forecastkernel.scripts.baseline_sf `
  --data data/raw/univariate_example.csv `
  --horizon 14 `
  --tag demo `
  --phase 4 `
  --regenerate

python -m forecastkernel.tests.test_ci_runtime `
  --run_dir data/outputs/baseline/demo `
  --data data/raw/univariate_example.csv

python -m forecastkernel.utils.ci_utils `
  --audit_log data/outputs/baseline/demo/audit_log.json `
  --output_dir data/outputs/baseline/demo `
  --log_ci_results

python -m forecastkernel.scripts.visual_delta_audit `
  --output_path data/outputs/baseline/demo
